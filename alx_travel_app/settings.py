# Email backend for development
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
# alx_travel_app/settings.py

"""
Django settings for alx_travel_app project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

import environ

# Initialize environ
env = environ.Env(
    # Set casting and default values
    DEBUG=(bool, True),
    SECRET_KEY=(str, "SECRET_KEY"),
    DJANGO_ALLOWED_HOSTS=(list, ["alx-travel-app-web.onrender.com", "localhost", "127.0.0.1"]),
    DB_NAME=(str, "DB_NAME"),
    DB_USER=(str, "DB_USER"),
    DB_PASSWORD=(str, "DB_PASSWORD"),
    DB_HOST=(str, "DB_HOST"),
    DB_PORT=(str, "DB_PORT"),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Take environment variables from .env file
env_file = BASE_DIR / ".env"
if env_file.exists():
    environ.Env.read_env(env_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/


# Production security settings
SECRET_KEY = env("SECRET_KEY")
DEBUG = env.bool("DEBUG")
ALLOWED_HOSTS = env.list("DJANGO_ALLOWED_HOSTS")  # Set your production domain

# HTTPS/SSL settings
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # local apps
    "listings",
    # third party apps
    "rest_framework",
    "corsheaders",
    "drf_yasg",
    # Celery
    "django_celery_results",
    "django_celery_beat",
    "django_extensions",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = "alx_travel_app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "alx_travel_app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD"),
        "HOST": env("DB_HOST"),
        "PORT": env("DB_PORT"),
    }
}
# Celery Configuration
try:
    CELERY_BROKER_URL = env("CELERY_BROKER_URL")
except Exception:
    CELERY_BROKER_URL = "amqp://localhost"
CELERY_RESULT_BACKEND = 'django-db'
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "UTC"


# Production Email Backend (SMTP example)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
try:
    EMAIL_HOST = env('EMAIL_HOST')
except Exception:
    EMAIL_HOST = 'smtp.example.com'
try:
    EMAIL_PORT = env.int('EMAIL_PORT')
except Exception:
    EMAIL_PORT = 587
try:
    EMAIL_HOST_USER = env('EMAIL_HOST_USER')
except Exception:
    EMAIL_HOST_USER = 'your_username'
try:
    EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
except Exception:
    EMAIL_HOST_PASSWORD = 'your_password'
try:
    EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS')
except Exception:
    EMAIL_USE_TLS = True
try:
    DEFAULT_FROM_EMAIL = env.str('DEFAULT_FROM_EMAIL')
except Exception:
    DEFAULT_FROM_EMAIL = 'noreply@yourdomain.com'


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Media files
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# REST Framework configuration
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
}

# CORS configuration
CORS_ORIGIN_ALLOW_ALL = True

# Swagger configuration
SWAGGER_SETTINGS = {"SECURITY_DEFINITIONS": {"Basic": {"type": "basic"}}}